{"ast":null,"code":"import _classCallCheck from\"C:/Users/Ang Kai Yang/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Ang Kai Yang/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";var TileResolver=/*#__PURE__*/function(){function TileResolver(matrix){var tileSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:16;_classCallCheck(this,TileResolver);this.matrix=matrix;this.tileSize=tileSize;}_createClass(TileResolver,[{key:\"toIndex\",value:function toIndex(pos){return Math.floor(pos/this.tileSize);}},{key:\"toIndexRange\",value:function toIndexRange(pos1,pos2){var pMax=Math.ceil(pos2/this.tileSize)*this.tileSize;var range=[];var pos=pos1;do{range.push(this.toIndex(pos));pos+=this.tileSize;}while(pos<pMax);return range;}},{key:\"getByIndex\",value:function getByIndex(indexX,indexY){var tile=this.matrix.get(indexX,indexY);if(tile){var x1=indexX*this.tileSize;var x2=x1+this.tileSize;var y1=indexY*this.tileSize;var y2=y1+this.tileSize;return{tile:tile,x1:x1,x2:x2,y1:y1,y2:y2};}}},{key:\"searchByPosition\",value:function searchByPosition(posX,posY){return this.getByIndex(this.toIndex(posX),this.toIndex(posY));}},{key:\"searchByRange\",value:function searchByRange(x1,x2,y1,y2){var _this=this;var matches=[];this.toIndexRange(x1,x2).forEach(function(indexX){_this.toIndexRange(y1,y2).forEach(function(indexY){var match=_this.getByIndex(indexX,indexY);if(match){matches.push(match);}});});return matches;}}]);return TileResolver;}();export{TileResolver as default};","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/js/TileResolver.js"],"names":["TileResolver","matrix","tileSize","pos","Math","floor","pos1","pos2","pMax","ceil","range","push","toIndex","indexX","indexY","tile","get","x1","x2","y1","y2","posX","posY","getByIndex","matches","toIndexRange","forEach","match"],"mappings":"qPAAqBA,CAAAA,Y,yBACpB,sBAAYC,MAAZ,CAA+B,IAAZC,CAAAA,QAAY,2DAAH,EAAG,oCAC9B,KAAKD,MAAL,CAAYA,MAAZ,CACA,KAAKC,QAAL,CAAcA,QAAd,CACA,C,gDAED,iBAAQC,GAAR,CAAY,CACX,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWF,GAAG,CAAG,KAAKD,QAAtB,CAAP,CACA,C,4BAED,sBAAaI,IAAb,CAAkBC,IAAlB,CAAuB,CACtB,GAAMC,CAAAA,IAAI,CAACJ,IAAI,CAACK,IAAL,CAAUF,IAAI,CAAC,KAAKL,QAApB,EAA8B,KAAKA,QAA9C,CACA,GAAMQ,CAAAA,KAAK,CAAC,EAAZ,CACA,GAAIP,CAAAA,GAAG,CAAGG,IAAV,CACA,EAAG,CACFI,KAAK,CAACC,IAAN,CAAW,KAAKC,OAAL,CAAaT,GAAb,CAAX,EACAA,GAAG,EAAE,KAAKD,QAAV,CACA,CAHD,MAGSC,GAAG,CAACK,IAHb,EAIA,MAAOE,CAAAA,KAAP,CACA,C,0BAED,oBAAWG,MAAX,CAAkBC,MAAlB,CAAyB,CACxB,GAAMC,CAAAA,IAAI,CAAC,KAAKd,MAAL,CAAYe,GAAZ,CAAgBH,MAAhB,CAAuBC,MAAvB,CAAX,CACA,GAAIC,IAAJ,CAAS,CACR,GAAME,CAAAA,EAAE,CAACJ,MAAM,CAAC,KAAKX,QAArB,CACA,GAAMgB,CAAAA,EAAE,CAACD,EAAE,CAAC,KAAKf,QAAjB,CACA,GAAMiB,CAAAA,EAAE,CAACL,MAAM,CAAC,KAAKZ,QAArB,CACA,GAAMkB,CAAAA,EAAE,CAACD,EAAE,CAAC,KAAKjB,QAAjB,CACA,MAAO,CACNa,IAAI,CAAJA,IADM,CAENE,EAAE,CAAFA,EAFM,CAGNC,EAAE,CAAFA,EAHM,CAINC,EAAE,CAAFA,EAJM,CAKNC,EAAE,CAAFA,EALM,CAAP,CAOA,CACD,C,gCAED,0BAAiBC,IAAjB,CAAsBC,IAAtB,CAA2B,CAC1B,MAAO,MAAKC,UAAL,CACN,KAAKX,OAAL,CAAaS,IAAb,CADM,CAEN,KAAKT,OAAL,CAAaU,IAAb,CAFM,CAAP,CAGA,C,6BAED,uBAAcL,EAAd,CAAiBC,EAAjB,CAAoBC,EAApB,CAAuBC,EAAvB,CAA0B,gBACzB,GAAMI,CAAAA,OAAO,CAAC,EAAd,CACA,KAAKC,YAAL,CAAkBR,EAAlB,CAAqBC,EAArB,EAAyBQ,OAAzB,CAAiC,SAAAb,MAAM,CAAE,CACxC,KAAI,CAACY,YAAL,CAAkBN,EAAlB,CAAqBC,EAArB,EAAyBM,OAAzB,CAAiC,SAAAZ,MAAM,CAAE,CACxC,GAAMa,CAAAA,KAAK,CAAC,KAAI,CAACJ,UAAL,CAAgBV,MAAhB,CAAuBC,MAAvB,CAAZ,CACA,GAAIa,KAAJ,CAAU,CACTH,OAAO,CAACb,IAAR,CAAagB,KAAb,EACA,CACD,CALD,EAMA,CAPD,EAQA,MAAOH,CAAAA,OAAP,CACA,C,mCAvDmBxB,Y","sourcesContent":["export default class TileResolver{\r\n\tconstructor(matrix,tileSize=16){\r\n\t\tthis.matrix=matrix;\r\n\t\tthis.tileSize=tileSize;\r\n\t}\r\n\r\n\ttoIndex(pos){\r\n\t\treturn Math.floor(pos / this.tileSize);\r\n\t}\r\n\r\n\ttoIndexRange(pos1,pos2){\r\n\t\tconst pMax=Math.ceil(pos2/this.tileSize)*this.tileSize;\r\n\t\tconst range=[];\r\n\t\tlet pos = pos1;\r\n\t\tdo {\r\n\t\t\trange.push(this.toIndex(pos));\r\n\t\t\tpos+=this.tileSize;\r\n\t\t} while (pos<pMax);\r\n\t\treturn range;\r\n\t}\r\n\r\n\tgetByIndex(indexX,indexY){\r\n\t\tconst tile=this.matrix.get(indexX,indexY);\r\n\t\tif (tile){\r\n\t\t\tconst x1=indexX*this.tileSize;\r\n\t\t\tconst x2=x1+this.tileSize;\r\n\t\t\tconst y1=indexY*this.tileSize;\r\n\t\t\tconst y2=y1+this.tileSize;\r\n\t\t\treturn {\r\n\t\t\t\ttile,\r\n\t\t\t\tx1,\r\n\t\t\t\tx2,\r\n\t\t\t\ty1,\r\n\t\t\t\ty2,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tsearchByPosition(posX,posY){\r\n\t\treturn this.getByIndex(\r\n\t\t\tthis.toIndex(posX),\r\n\t\t\tthis.toIndex(posY));\r\n\t}\r\n\r\n\tsearchByRange(x1,x2,y1,y2){\r\n\t\tconst matches=[];\r\n\t\tthis.toIndexRange(x1,x2).forEach(indexX=>{\r\n\t\t\tthis.toIndexRange(y1,y2).forEach(indexY=>{\r\n\t\t\t\tconst match=this.getByIndex(indexX,indexY);\r\n\t\t\t\tif (match){\r\n\t\t\t\t\tmatches.push(match);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn matches;\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}