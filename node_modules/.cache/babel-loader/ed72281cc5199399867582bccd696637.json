{"ast":null,"code":"import TileResolver from'./TileResolver.js';export function createBackgroundLayer(level,tiles,sprites){var resolver=new TileResolver(tiles);var buffer=document.createElement('canvas');buffer.width=550;buffer.height=640;var context=buffer.getContext('2d');function redraw(startIndex,endIndex){context.clearRect(0,0,buffer.width,buffer.height);var _loop=function _loop(x){var col=tiles.grid[x];if(col){col.forEach(function(tile,y){if(sprites.animation.has(tile.name)){sprites.drawAnim(tile.name,context,x-startIndex,y,level.totalTime);}else{sprites.drawtile(tile.name,context,x-startIndex,y);}});}};for(var x=startIndex;x<=endIndex;++x){_loop(x);}}return function drawBackgroundLayer(context,camera){var drawWidth=resolver.toIndex(camera.size.x);var drawFrom=resolver.toIndex(camera.pos.x);var drawTo=drawFrom+drawWidth;redraw(drawFrom,drawTo);//+screenwidth here\ncontext.drawImage(buffer,-camera.pos.x%16,-camera.pos.y);};}export function createSpriteLayer(entities){var width=arguments.length>1&&arguments[1]!==undefined?arguments[1]:200;var height=arguments.length>2&&arguments[2]!==undefined?arguments[2]:64;var spriteBuffer=document.createElement('canvas');spriteBuffer.width=width;spriteBuffer.height=height;var spriteBufferContext=spriteBuffer.getContext('2d');return function drawSpriteLayer(context,camera){entities.forEach(function(entity){spriteBufferContext.clearRect(0,0,width,height);entity.draw(spriteBufferContext);context.drawImage(spriteBuffer,entity.pos.x-camera.pos.x,//here\nentity.pos.y-camera.pos.y);//here\n});};}// export function createCollisionLayer(level){\n// \tconst resolvedTiles=[];\n// \tconst tileResolver=level.tileCollider.tiles;\n// \tconst tileSize=tileResolver.tileSize;\n// \tconst getByIndexOriginal=tileResolver.getByIndex;\n// \ttileResolver.getByIndex=function getByIndexFake(x,y){\n// \t\tresolvedTiles.push({x,y});\n// \t\treturn getByIndexOriginal.call(tileResolver,x,y);\n// \t}\n// \treturn function drawCollision(context){\n// \t\tcontext.strokeStyle='blue';\n// \t\tresolvedTiles.forEach(({x,y})=>{\n// \t\t\tcontext.beginPath();\n// \t\t\tcontext.rect(\n// \t\t\t\tx*tileSize-camera.pos.x, //here\n// \t\t\t\ty*tileSize-camera.pos.y, //here\n// \t\t\t\ttileSize,tileSize);\n// \t\t\t//context.stroke();\n// \t\t\t//console.log('Would draw',x,y);\n// \t\t});\n// \t\tcontext.strokeStyle='red';\n// \t\tlevel.entities.forEach(entity=>{\n// \t\t\tcontext.beginPath();\n// \t\t\tcontext.rect(\n// \t\t\t\tentity.pos.x-camera.pos.x, //here\n// \t\t\t\tentity.pos.y-camera.pos.y, //here\n// \t\t\t\tentity.size.x,\n// \t\t\t\tentity.size.y);\n// \t\t\t//context.stroke();\n// \t\t})\n// \t\tresolvedTiles.length=0;\n// \t};\n// }\nexport function createCameraLayer(cameraToDraw){return function drawCameraRect(context,fromCamera){context.strokeStyle='purple';context.beginPath();context.rect(cameraToDraw.pos.x-fromCamera.pos.x,cameraToDraw.pos.y-fromCamera.pos.y,cameraToDraw.size.x,cameraToDraw.size.y);context.stroke();};}","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/js/layers.js"],"names":["TileResolver","createBackgroundLayer","level","tiles","sprites","resolver","buffer","document","createElement","width","height","context","getContext","redraw","startIndex","endIndex","clearRect","x","col","grid","forEach","tile","y","animation","has","name","drawAnim","totalTime","drawtile","drawBackgroundLayer","camera","drawWidth","toIndex","size","drawFrom","pos","drawTo","drawImage","createSpriteLayer","entities","spriteBuffer","spriteBufferContext","drawSpriteLayer","entity","draw","createCameraLayer","cameraToDraw","drawCameraRect","fromCamera","strokeStyle","beginPath","rect","stroke"],"mappings":"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","sourcesContent":["import TileResolver from './TileResolver.js';\r\n\r\nexport function createBackgroundLayer (level,tiles, sprites){\r\n\tconst resolver = new TileResolver(tiles);\r\n\r\n\tconst buffer=document.createElement('canvas');\r\n \tbuffer.width=550;\r\n \tbuffer.height=640;\r\n \tconst context=buffer.getContext('2d');\r\n\r\n \tfunction redraw(startIndex,endIndex){\r\n \t\tcontext.clearRect(0,0,buffer.width,buffer.height);\r\n \t\tfor (let x=startIndex;x<=endIndex;++x){\r\n \t\t\tconst col = tiles.grid[x];\r\n \t\t\tif (col){\r\n \t\t\t\tcol.forEach((tile,y)=>{\r\n \t\t\t\t\tif (sprites.animation.has(tile.name)){\r\n \t\t\t\t\t\tsprites.drawAnim(tile.name,context,x-startIndex,y,level.totalTime);\r\n \t\t\t\t\t} else {\r\n \t\t\t\t\t\tsprites.drawtile(tile.name,context,x-startIndex,y);\r\n \t\t\t\t\t}\r\n \t\t\t\t});\r\n \t\t\t}\r\n \t\t}\r\n \t}\r\n\r\n \treturn function drawBackgroundLayer(context,camera){\r\n \t\tconst drawWidth=resolver.toIndex(camera.size.x);\r\n \t\tconst drawFrom=resolver.toIndex(camera.pos.x);\r\n \t\tconst drawTo=drawFrom+drawWidth;\r\n \t\tredraw(drawFrom,drawTo);  //+screenwidth here\r\n \t\tcontext.drawImage(buffer,\r\n \t\t\t-camera.pos.x%16,\r\n \t\t\t-camera.pos.y);\r\n \t};\r\n}\r\n\r\nexport function createSpriteLayer(entities, width=200,height=64){\r\n\tconst spriteBuffer=document.createElement('canvas');\r\n\tspriteBuffer.width=width;\r\n\tspriteBuffer.height=height;\r\n\tconst spriteBufferContext=spriteBuffer.getContext('2d');\r\n\r\n\treturn function drawSpriteLayer(context,camera){\r\n\t\tentities.forEach(entity=>{\r\n\t\t\tspriteBufferContext.clearRect(0,0,width,height);\r\n\r\n\t\t\tentity.draw(spriteBufferContext);\r\n\r\n\t\t\tcontext.drawImage(\r\n\t\t\t\tspriteBuffer,\r\n\t\t\t\tentity.pos.x-camera.pos.x,  //here\r\n\t\t\t\tentity.pos.y-camera.pos.y); //here\r\n\t\t});\r\n\t};\r\n}\r\n\r\n// export function createCollisionLayer(level){\r\n// \tconst resolvedTiles=[];\r\n\r\n// \tconst tileResolver=level.tileCollider.tiles;\r\n// \tconst tileSize=tileResolver.tileSize;\r\n\r\n// \tconst getByIndexOriginal=tileResolver.getByIndex;\r\n// \ttileResolver.getByIndex=function getByIndexFake(x,y){\r\n// \t\tresolvedTiles.push({x,y});\r\n// \t\treturn getByIndexOriginal.call(tileResolver,x,y);\r\n// \t}\r\n\r\n// \treturn function drawCollision(context){\r\n// \t\tcontext.strokeStyle='blue';\r\n// \t\tresolvedTiles.forEach(({x,y})=>{\r\n// \t\t\tcontext.beginPath();\r\n// \t\t\tcontext.rect(\r\n// \t\t\t\tx*tileSize-camera.pos.x, //here\r\n// \t\t\t\ty*tileSize-camera.pos.y, //here\r\n// \t\t\t\ttileSize,tileSize);\r\n// \t\t\t//context.stroke();\r\n// \t\t\t//console.log('Would draw',x,y);\r\n// \t\t});\r\n\r\n// \t\tcontext.strokeStyle='red';\r\n// \t\tlevel.entities.forEach(entity=>{\r\n// \t\t\tcontext.beginPath();\r\n// \t\t\tcontext.rect(\r\n// \t\t\t\tentity.pos.x-camera.pos.x, //here\r\n// \t\t\t\tentity.pos.y-camera.pos.y, //here\r\n// \t\t\t\tentity.size.x,\r\n// \t\t\t\tentity.size.y);\r\n// \t\t\t//context.stroke();\r\n// \t\t})\r\n\r\n// \t\tresolvedTiles.length=0;\r\n// \t};\r\n// }\r\n\r\nexport function createCameraLayer(cameraToDraw){\r\n\treturn function drawCameraRect(context,fromCamera){\r\n\t\tcontext.strokeStyle='purple';\r\n\t\tcontext.beginPath();\r\n\t\t\tcontext.rect(\r\n\t\t\t\tcameraToDraw.pos.x-fromCamera.pos.x,\r\n\t\t\t\tcameraToDraw.pos.y-fromCamera.pos.y,\r\n\t\t\t\tcameraToDraw.size.x,\r\n\t\t\t\tcameraToDraw.size.y);\r\n\t\t\tcontext.stroke();\r\n\t};\r\n}"]},"metadata":{},"sourceType":"module"}