{"ast":null,"code":"import _classCallCheck from\"C:/Users/Ang Kai Yang/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Ang Kai Yang/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";var SpriteSheet=/*#__PURE__*/function(){function SpriteSheet(image,width,height){_classCallCheck(this,SpriteSheet);this.image=image;this.width=width;this.height=height;this.tiles=new Map();this.animation=new Map();}_createClass(SpriteSheet,[{key:\"defineAnim\",value:function defineAnim(name,animation){this.animation.set(name,animation);}},{key:\"define\",value:function define(name,x,y,width,height){var _this=this;var buffers=[false,true].map(function(flip){var buffer=document.createElement('canvas');buffer.width=width;//?\nbuffer.height=height;//?\nvar context=buffer.getContext('2d');if(flip){context.scale(-1,1);context.translate(-width,0);}context.drawImage(_this.image,x,//pieces\ny,width,height,0,//coordinates\n0,width,//size\nheight);return buffer;});this.tiles.set(name,buffers);}},{key:\"defineTile\",value:function defineTile(name,x,y){this.define(name,x*this.width,y*this.height,this.width,this.height);}},{key:\"draw\",value:function draw(name,context,x,y){var flip=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var buffer=this.tiles.get(name)[flip?1:0];context.drawImage(buffer,x,y);}},{key:\"drawAnim\",value:function drawAnim(name,context,x,y,distance){var animation=this.animation.get(name);this.drawtile(animation(distance),context,x,y);}},{key:\"drawtile\",value:function drawtile(name,context,x,y){this.draw(name,context,x*this.width,y*this.height);}}]);return SpriteSheet;}();export{SpriteSheet as default};","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/js/SpriteSheet.js"],"names":["SpriteSheet","image","width","height","tiles","Map","animation","name","set","x","y","buffers","map","flip","buffer","document","createElement","context","getContext","scale","translate","drawImage","define","get","distance","drawtile","draw"],"mappings":"qPAAqBA,CAAAA,W,yBACpB,qBAAYC,KAAZ,CAAkBC,KAAlB,CAAwBC,MAAxB,CAA+B,mCAC9B,KAAKF,KAAL,CAAWA,KAAX,CACA,KAAKC,KAAL,CAAWA,KAAX,CACA,KAAKC,MAAL,CAAYA,MAAZ,CACA,KAAKC,KAAL,CAAW,GAAIC,CAAAA,GAAJ,EAAX,CACA,KAAKC,SAAL,CAAe,GAAID,CAAAA,GAAJ,EAAf,CACA,C,kDAED,oBAAWE,IAAX,CAAgBD,SAAhB,CAA0B,CACzB,KAAKA,SAAL,CAAeE,GAAf,CAAmBD,IAAnB,CAAwBD,SAAxB,EACA,C,sBAED,gBAAOC,IAAP,CAAYE,CAAZ,CAAcC,CAAd,CAAgBR,KAAhB,CAAsBC,MAAtB,CAA6B,gBAC5B,GAAMQ,CAAAA,OAAO,CAAG,CAAC,KAAD,CAAO,IAAP,EAAaC,GAAb,CAAiB,SAAAC,IAAI,CAAE,CACvC,GAAMC,CAAAA,MAAM,CAACC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb,CACAF,MAAM,CAACZ,KAAP,CAAaA,KAAb,CAAoB;AACpBY,MAAM,CAACX,MAAP,CAAcA,MAAd,CAAsB;AAEtB,GAAMc,CAAAA,OAAO,CAAEH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAf,CAEA,GAAIL,IAAJ,CAAS,CACTI,OAAO,CAACE,KAAR,CAAc,CAAC,CAAf,CAAiB,CAAjB,EACAF,OAAO,CAACG,SAAR,CAAkB,CAAClB,KAAnB,CAAyB,CAAzB,EACC,CAEDe,OAAO,CAACI,SAAR,CACE,KAAI,CAACpB,KADP,CAEEQ,CAFF,CAEK;AACHC,CAHF,CAIER,KAJF,CAKEC,MALF,CAME,CANF,CAMK;AACH,CAPF,CAQED,KARF,CAQS;AACPC,MATF,EAUC,MAAOW,CAAAA,MAAP,CACA,CAvBe,CAAhB,CAwBA,KAAKV,KAAL,CAAWI,GAAX,CAAeD,IAAf,CAAoBI,OAApB,EACA,C,0BAED,oBAAWJ,IAAX,CAAgBE,CAAhB,CAAkBC,CAAlB,CAAoB,CACnB,KAAKY,MAAL,CAAYf,IAAZ,CAAiBE,CAAC,CAAC,KAAKP,KAAxB,CAA8BQ,CAAC,CAAC,KAAKP,MAArC,CAA4C,KAAKD,KAAjD,CAAuD,KAAKC,MAA5D,EACA,C,oBAED,cAAKI,IAAL,CAAUU,OAAV,CAAkBR,CAAlB,CAAoBC,CAApB,CAAkC,IAAXG,CAAAA,IAAW,2DAAN,KAAM,CACjC,GAAMC,CAAAA,MAAM,CAAC,KAAKV,KAAL,CAAWmB,GAAX,CAAehB,IAAf,EAAqBM,IAAI,CAAC,CAAD,CAAG,CAA5B,CAAb,CACAI,OAAO,CAACI,SAAR,CAAkBP,MAAlB,CAAyBL,CAAzB,CAA2BC,CAA3B,EACA,C,wBAED,kBAASH,IAAT,CAAcU,OAAd,CAAsBR,CAAtB,CAAwBC,CAAxB,CAA0Bc,QAA1B,CAAmC,CAClC,GAAMlB,CAAAA,SAAS,CAAG,KAAKA,SAAL,CAAeiB,GAAf,CAAmBhB,IAAnB,CAAlB,CACA,KAAKkB,QAAL,CAAcnB,SAAS,CAACkB,QAAD,CAAvB,CAAkCP,OAAlC,CAA0CR,CAA1C,CAA4CC,CAA5C,EACA,C,wBAED,kBAASH,IAAT,CAAcU,OAAd,CAAsBR,CAAtB,CAAwBC,CAAxB,CAA0B,CACzB,KAAKgB,IAAL,CAAUnB,IAAV,CAAeU,OAAf,CAAuBR,CAAC,CAAC,KAAKP,KAA9B,CAAoCQ,CAAC,CAAC,KAAKP,MAA3C,EACA,C,kCAzDmBH,W","sourcesContent":["export default class SpriteSheet{\r\n\tconstructor(image,width,height){\r\n\t\tthis.image=image;\r\n\t\tthis.width=width;\r\n\t\tthis.height=height;\r\n\t\tthis.tiles=new Map();\r\n\t\tthis.animation=new Map();\r\n\t}\r\n\r\n\tdefineAnim(name,animation){\r\n\t\tthis.animation.set(name,animation);\r\n\t}\r\n\r\n\tdefine(name,x,y,width,height){\r\n\t\tconst buffers = [false,true].map(flip=>{\r\n\t\tconst buffer=document.createElement('canvas');\r\n\t\tbuffer.width=width; //?\r\n\t\tbuffer.height=height; //?\r\n\r\n\t\tconst context =buffer.getContext('2d');\r\n\r\n\t\tif (flip){\r\n\t\tcontext.scale(-1,1);\r\n\t\tcontext.translate(-width,0);\r\n\t\t}\r\n\r\n\t\tcontext.drawImage(\r\n\t\t\t\tthis.image,\r\n\t\t\t\tx, //pieces\r\n\t\t\t\ty,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\t0, //coordinates\r\n\t\t\t\t0,\r\n\t\t\t\twidth, //size\r\n\t\t\t\theight);\r\n\t\t\treturn buffer;\r\n\t\t});\r\n\t\tthis.tiles.set(name,buffers);\r\n\t}\r\n\r\n\tdefineTile(name,x,y){\r\n\t\tthis.define(name,x*this.width,y*this.height,this.width,this.height);\r\n\t}\r\n\r\n\tdraw(name,context,x,y, flip=false){\r\n\t\tconst buffer=this.tiles.get(name)[flip?1:0];\r\n\t\tcontext.drawImage(buffer,x,y);\r\n\t}\r\n\r\n\tdrawAnim(name,context,x,y,distance){\r\n\t\tconst animation = this.animation.get(name);\r\n\t\tthis.drawtile(animation(distance),context,x,y);\r\n\t}\r\n\r\n\tdrawtile(name,context,x,y){\r\n\t\tthis.draw(name,context,x*this.width,y*this.height);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}