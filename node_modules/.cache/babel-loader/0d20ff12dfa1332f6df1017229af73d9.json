{"ast":null,"code":"import SpriteSheet from './SpriteSheet.js';\nimport { createAnim } from './anim.js';\nexport function loadImage(url) {\n  return new Promise(resolve => {\n    const image = new Image();\n    image.addEventListener('load', () => {\n      resolve(image);\n    });\n    image.src = url;\n  });\n}\nexport function loadJSON(url) {\n  return fetch(url).then(r => r.json());\n}\nexport function loadSpriteSheet(name) {\n  return loadJSON(`./sprite/${name}.json`).then(sheetSpec => Promise.all([sheetSpec, loadImage(sheetSpec.imageURL)])).then(([sheetSpec, image]) => {\n    const sprites = new SpriteSheet(image, sheetSpec.tileW, sheetSpec.tileH); //size\n\n    if (sheetSpec.tiles) {\n      sheetSpec.tiles.forEach(tileSpec => {\n        sprites.defineTile(tileSpec.name, tileSpec.index[0], tileSpec.index[1]);\n      });\n    }\n\n    if (sheetSpec.frames) {\n      sheetSpec.frames.forEach(frameSpec => {\n        sprites.define(frameSpec.name, ...frameSpec.rect);\n      });\n    }\n\n    if (sheetSpec.animations) {\n      sheetSpec.animations.forEach(animSpec => {\n        const animation = createAnim(animSpec.frames, animSpec.frameLen);\n        sprites.defineAnim(animSpec.name, animation);\n      });\n    }\n\n    return sprites;\n  });\n}","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/main/loaders.js"],"names":["SpriteSheet","createAnim","loadImage","url","Promise","resolve","image","Image","addEventListener","src","loadJSON","fetch","then","r","json","loadSpriteSheet","name","sheetSpec","all","imageURL","sprites","tileW","tileH","tiles","forEach","tileSpec","defineTile","index","frames","frameSpec","define","rect","animations","animSpec","animation","frameLen","defineAnim"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,SAAQC,UAAR,QAAyB,WAAzB;AAEA,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AAC9B,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC7B,UAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,IAAAA,KAAK,CAACE,gBAAN,CAAuB,MAAvB,EAA+B,MAAM;AACpCH,MAAAA,OAAO,CAACC,KAAD,CAAP;AACA,KAFD;AAGAA,IAAAA,KAAK,CAACG,GAAN,GAAYN,GAAZ;AACA,GANM,CAAP;AAOA;AAED,OAAO,SAASO,QAAT,CAAkBP,GAAlB,EAAsB;AAC5B,SAAOQ,KAAK,CAACR,GAAD,CAAL,CACNS,IADM,CACDC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADF,CAAP;AAEA;AAED,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA8B;AACpC,SAAON,QAAQ,CAAE,YAAWM,IAAK,OAAlB,CAAR,CACNJ,IADM,CACDK,SAAS,IAAGb,OAAO,CAACc,GAAR,CAAY,CAC7BD,SAD6B,EAE7Bf,SAAS,CAACe,SAAS,CAACE,QAAX,CAFoB,CAAZ,CADX,EAKNP,IALM,CAKD,CAAC,CAACK,SAAD,EAAWX,KAAX,CAAD,KAAqB;AAC1B,UAAMc,OAAO,GAAC,IAAIpB,WAAJ,CACdM,KADc,EAEdW,SAAS,CAACI,KAFI,EAGdJ,SAAS,CAACK,KAHI,CAAd,CAD0B,CAIR;;AAElB,QAAIL,SAAS,CAACM,KAAd,EAAoB;AACnBN,MAAAA,SAAS,CAACM,KAAV,CAAgBC,OAAhB,CAAwBC,QAAQ,IAAE;AACjCL,QAAAA,OAAO,CAACM,UAAR,CACCD,QAAQ,CAACT,IADV,EAECS,QAAQ,CAACE,KAAT,CAAe,CAAf,CAFD,EAGCF,QAAQ,CAACE,KAAT,CAAe,CAAf,CAHD;AAIA,OALD;AAMA;;AAED,QAAIV,SAAS,CAACW,MAAd,EAAqB;AACpBX,MAAAA,SAAS,CAACW,MAAV,CAAiBJ,OAAjB,CAAyBK,SAAS,IAAE;AACnCT,QAAAA,OAAO,CAACU,MAAR,CAAeD,SAAS,CAACb,IAAzB,EAA+B,GAAGa,SAAS,CAACE,IAA5C;AACA,OAFD;AAGA;;AAED,QAAId,SAAS,CAACe,UAAd,EAAyB;AACxBf,MAAAA,SAAS,CAACe,UAAV,CAAqBR,OAArB,CAA6BS,QAAQ,IAAE;AACtC,cAAMC,SAAS,GAACjC,UAAU,CAACgC,QAAQ,CAACL,MAAV,EAAiBK,QAAQ,CAACE,QAA1B,CAA1B;AACAf,QAAAA,OAAO,CAACgB,UAAR,CAAmBH,QAAQ,CAACjB,IAA5B,EAAiCkB,SAAjC;AACA,OAHD;AAIA;;AAED,WAAOd,OAAP;AACA,GAlCM,CAAP;AAmCA","sourcesContent":["import SpriteSheet from './SpriteSheet.js';\r\nimport {createAnim} from './anim.js';\r\n\r\nexport function loadImage(url) {\r\n\treturn new Promise(resolve => {\r\n\t\tconst image = new Image();\r\n\t\timage.addEventListener('load', () => {\r\n\t\t\tresolve(image);\r\n\t\t});\r\n\t\timage.src = url;\r\n\t});\r\n}\r\n\r\nexport function loadJSON(url){\r\n\treturn fetch(url)\r\n\t.then(r=>r.json());\r\n}\r\n\r\nexport function loadSpriteSheet(name){\r\n\treturn loadJSON(`./sprite/${name}.json`)\r\n\t.then(sheetSpec=> Promise.all([\r\n\t\tsheetSpec,\r\n\t\tloadImage(sheetSpec.imageURL),\r\n\t]))\r\n\t.then(([sheetSpec,image])=>{\r\n\t\tconst sprites=new SpriteSheet(\r\n\t\timage,\r\n\t\tsheetSpec.tileW,\r\n\t\tsheetSpec.tileH); //size\r\n\r\n\t\tif (sheetSpec.tiles){\r\n\t\t\tsheetSpec.tiles.forEach(tileSpec=>{\r\n\t\t\t\tsprites.defineTile(\r\n\t\t\t\t\ttileSpec.name,\r\n\t\t\t\t\ttileSpec.index[0],\r\n\t\t\t\t\ttileSpec.index[1]);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (sheetSpec.frames){\r\n\t\t\tsheetSpec.frames.forEach(frameSpec=>{\r\n\t\t\t\tsprites.define(frameSpec.name, ...frameSpec.rect);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (sheetSpec.animations){\r\n\t\t\tsheetSpec.animations.forEach(animSpec=>{\r\n\t\t\t\tconst animation=createAnim(animSpec.frames,animSpec.frameLen);\r\n\t\t\t\tsprites.defineAnim(animSpec.name,animation);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn sprites;\r\n\t});\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}