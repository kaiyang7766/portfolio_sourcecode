{"ast":null,"code":"import _classCallCheck from\"C:/Users/Ang Kai Yang/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/Ang Kai Yang/Desktop/portfolio/node_modules/@babel/runtime/helpers/esm/createClass\";import TileResolver from'./TileResolver.js';import{Sides}from'./Entity.js';var TileCollider=/*#__PURE__*/function(){function TileCollider(tileMatrix){_classCallCheck(this,TileCollider);this.tiles=new TileResolver(tileMatrix);}_createClass(TileCollider,[{key:\"checkX\",value:function checkX(entity){var x;if(entity.vel.x>0){x=entity.pos.x+entity.size.x;}else if(entity.vel.x<0){x=entity.pos.x;}else{return;}var matches=this.tiles.searchByRange(entity.pos.x,entity.pos.x+entity.size.x,entity.pos.y,entity.pos.y+entity.size.y);matches.forEach(function(match){if(match.tile.type!=='ground'){return;}if(entity.vel.x>0){if(entity.pos.x+entity.size.x>match.x1){entity.pos.x=match.x1-entity.size.x;entity.vel.x=0;}}else if(entity.vel.x<0){if(entity.pos.x<match.x2){entity.pos.x=match.x2;entity.vel.x=0;}}});}},{key:\"checkY\",value:function checkY(entity){var y;if(entity.vel.y>0){y=entity.pos.y+entity.size.y;}else if(entity.vel.y<0){y=entity.pos.y;}else{return;}var matches=this.tiles.searchByRange(entity.pos.x,entity.pos.x+entity.size.x,entity.pos.y,entity.pos.y+entity.size.y);matches.forEach(function(match){if(match.tile.type!=='ground'){return;}if(entity.vel.y>0){if(entity.pos.y+entity.size.y>match.y1){entity.pos.y=match.y1-entity.size.y;entity.vel.y=0;entity.obstruct(Sides.BOTTOM);}}else if(entity.vel.y<0){if(entity.pos.y<match.y2){entity.pos.y=match.y2;entity.vel.y=0;entity.obstruct(Sides.TOP);}}});}},{key:\"test\",value:function test(entity){this.checkY(entity);//const match=this.tiles.matchByPosition(entity.pos.x,entity.pos.y);\n//if (match){\n//console.log('Matched tile',match,match.tile);\n}}]);return TileCollider;}();export{TileCollider as default};","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/js/TileCollider.js"],"names":["TileResolver","Sides","TileCollider","tileMatrix","tiles","entity","x","vel","pos","size","matches","searchByRange","y","forEach","match","tile","type","x1","x2","y1","obstruct","BOTTOM","y2","TOP","checkY"],"mappings":"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","sourcesContent":["import TileResolver from './TileResolver.js';\r\nimport {Sides} from './Entity.js'\r\n\r\nexport default class TileCollider{\r\n\tconstructor(tileMatrix){\r\n\t\tthis.tiles=new TileResolver(tileMatrix);\r\n\t}\r\n\r\n\tcheckX(entity){\r\n\t\tlet x;\r\n\t\tif (entity.vel.x>0){\r\n\t\t\tx=entity.pos.x+entity.size.x;\r\n\t\t} else if (entity.vel.x<0){\r\n\t\t\tx=entity.pos.x;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst matches=this.tiles.searchByRange(\r\n\t\t\tentity.pos.x,entity.pos.x+entity.size.x,\r\n\t\t\tentity.pos.y,entity.pos.y+entity.size.y);\r\n\r\n\t\tmatches.forEach(match=>{\r\n\t\t\tif (match.tile.type!=='ground'){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (entity.vel.x>0){\r\n\t\t\t\tif (entity.pos.x+entity.size.x>(match.x1)){\r\n\t\t\t\t\tentity.pos.x=(match.x1-entity.size.x);\r\n\t\t\t\t\tentity.vel.x=0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (entity.vel.x<0){\r\n\t\t\t\tif (entity.pos.x<(match.x2)){\r\n\t\t\t\t\tentity.pos.x=(match.x2);\r\n\t\t\t\t\tentity.vel.x=0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcheckY(entity){\r\n\t\tlet y;\r\n\t\tif (entity.vel.y>0){\r\n\t\t\ty=entity.pos.y+entity.size.y;\r\n\t\t} else if (entity.vel.y<0){\r\n\t\t\ty=entity.pos.y\r\n\t\t\t;\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst matches=this.tiles.searchByRange(\r\n\t\t\tentity.pos.x,entity.pos.x+entity.size.x,\r\n\t\t\tentity.pos.y,entity.pos.y+entity.size.y);\r\n\r\n\t\tmatches.forEach(match=>{\r\n\t\t\tif (match.tile.type!=='ground'){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (entity.vel.y>0){\r\n\t\t\t\tif (entity.pos.y+entity.size.y>(match.y1)){\r\n\t\t\t\t\tentity.pos.y=(match.y1-entity.size.y);\r\n\t\t\t\t\tentity.vel.y=0;\r\n\r\n\t\t\t\t\tentity.obstruct(Sides.BOTTOM);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (entity.vel.y<0){\r\n\t\t\t\tif (entity.pos.y<(match.y2)){\r\n\t\t\t\t\tentity.pos.y=(match.y2);\r\n\t\t\t\t\tentity.vel.y=0;\r\n\r\n\t\t\t\t\tentity.obstruct(Sides.TOP);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\ttest(entity){\r\n\t\tthis.checkY(entity);\r\n\t\t//const match=this.tiles.matchByPosition(entity.pos.x,entity.pos.y);\r\n\t\t//if (match){\r\n\t\t//console.log('Matched tile',match,match.tile);\r\n\t\t}\r\n}"]},"metadata":{},"sourceType":"module"}