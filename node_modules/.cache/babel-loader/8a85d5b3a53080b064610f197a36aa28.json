{"ast":null,"code":"export default class SpriteSheet {\n  constructor(image, width, height) {\n    this.image = image;\n    this.width = width;\n    this.height = height;\n    this.tiles = new Map();\n    this.animation = new Map();\n  }\n\n  defineAnim(name, animation) {\n    this.animation.set(name, animation);\n  }\n\n  define(name, x, y, width, height) {\n    const buffers = [false, true].map(flip => {\n      const buffer = document.createElement('canvas');\n      buffer.width = width; //?\n\n      buffer.height = height; //?\n\n      const context = buffer.getContext('2d');\n\n      if (flip) {\n        context.scale(-1, 1);\n        context.translate(-width, 0);\n      }\n\n      context.drawImage(this.image, x, //pieces\n      y, width, height, 0, //coordinates\n      0, width, //size\n      height);\n      return buffer;\n    });\n    this.tiles.set(name, buffers);\n  }\n\n  defineTile(name, x, y) {\n    this.define(name, x * this.width, y * this.height, this.width, this.height);\n  }\n\n  draw(name, context, x, y, flip = false) {\n    const buffer = this.tiles.get(name)[flip ? 1 : 0];\n    context.drawImage(buffer, x, y);\n  }\n\n  drawAnim(name, context, x, y, distance) {\n    const animation = this.animation.get(name);\n    this.drawtile(animation(distance), context, x, y);\n  }\n\n  drawtile(name, context, x, y) {\n    this.draw(name, context, x * this.width, y * this.height);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/main/SpriteSheet.js"],"names":["SpriteSheet","constructor","image","width","height","tiles","Map","animation","defineAnim","name","set","define","x","y","buffers","map","flip","buffer","document","createElement","context","getContext","scale","translate","drawImage","defineTile","draw","get","drawAnim","distance","drawtile"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAiB;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAOC,KAAP,EAAaC,MAAb,EAAoB;AAC9B,SAAKF,KAAL,GAAWA,KAAX;AACA,SAAKC,KAAL,GAAWA,KAAX;AACA,SAAKC,MAAL,GAAYA,MAAZ;AACA,SAAKC,KAAL,GAAW,IAAIC,GAAJ,EAAX;AACA,SAAKC,SAAL,GAAe,IAAID,GAAJ,EAAf;AACA;;AAEDE,EAAAA,UAAU,CAACC,IAAD,EAAMF,SAAN,EAAgB;AACzB,SAAKA,SAAL,CAAeG,GAAf,CAAmBD,IAAnB,EAAwBF,SAAxB;AACA;;AAEDI,EAAAA,MAAM,CAACF,IAAD,EAAMG,CAAN,EAAQC,CAAR,EAAUV,KAAV,EAAgBC,MAAhB,EAAuB;AAC5B,UAAMU,OAAO,GAAG,CAAC,KAAD,EAAO,IAAP,EAAaC,GAAb,CAAiBC,IAAI,IAAE;AACvC,YAAMC,MAAM,GAACC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAb;AACAF,MAAAA,MAAM,CAACd,KAAP,GAAaA,KAAb,CAFuC,CAEnB;;AACpBc,MAAAA,MAAM,CAACb,MAAP,GAAcA,MAAd,CAHuC,CAGjB;;AAEtB,YAAMgB,OAAO,GAAEH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAf;;AAEA,UAAIL,IAAJ,EAAS;AACTI,QAAAA,OAAO,CAACE,KAAR,CAAc,CAAC,CAAf,EAAiB,CAAjB;AACAF,QAAAA,OAAO,CAACG,SAAR,CAAkB,CAACpB,KAAnB,EAAyB,CAAzB;AACC;;AAEDiB,MAAAA,OAAO,CAACI,SAAR,CACE,KAAKtB,KADP,EAEEU,CAFF,EAEK;AACHC,MAAAA,CAHF,EAIEV,KAJF,EAKEC,MALF,EAME,CANF,EAMK;AACH,OAPF,EAQED,KARF,EAQS;AACPC,MAAAA,MATF;AAUC,aAAOa,MAAP;AACA,KAvBe,CAAhB;AAwBA,SAAKZ,KAAL,CAAWK,GAAX,CAAeD,IAAf,EAAoBK,OAApB;AACA;;AAEDW,EAAAA,UAAU,CAAChB,IAAD,EAAMG,CAAN,EAAQC,CAAR,EAAU;AACnB,SAAKF,MAAL,CAAYF,IAAZ,EAAiBG,CAAC,GAAC,KAAKT,KAAxB,EAA8BU,CAAC,GAAC,KAAKT,MAArC,EAA4C,KAAKD,KAAjD,EAAuD,KAAKC,MAA5D;AACA;;AAEDsB,EAAAA,IAAI,CAACjB,IAAD,EAAMW,OAAN,EAAcR,CAAd,EAAgBC,CAAhB,EAAmBG,IAAI,GAAC,KAAxB,EAA8B;AACjC,UAAMC,MAAM,GAAC,KAAKZ,KAAL,CAAWsB,GAAX,CAAelB,IAAf,EAAqBO,IAAI,GAAC,CAAD,GAAG,CAA5B,CAAb;AACAI,IAAAA,OAAO,CAACI,SAAR,CAAkBP,MAAlB,EAAyBL,CAAzB,EAA2BC,CAA3B;AACA;;AAEDe,EAAAA,QAAQ,CAACnB,IAAD,EAAMW,OAAN,EAAcR,CAAd,EAAgBC,CAAhB,EAAkBgB,QAAlB,EAA2B;AAClC,UAAMtB,SAAS,GAAG,KAAKA,SAAL,CAAeoB,GAAf,CAAmBlB,IAAnB,CAAlB;AACA,SAAKqB,QAAL,CAAcvB,SAAS,CAACsB,QAAD,CAAvB,EAAkCT,OAAlC,EAA0CR,CAA1C,EAA4CC,CAA5C;AACA;;AAEDiB,EAAAA,QAAQ,CAACrB,IAAD,EAAMW,OAAN,EAAcR,CAAd,EAAgBC,CAAhB,EAAkB;AACzB,SAAKa,IAAL,CAAUjB,IAAV,EAAeW,OAAf,EAAuBR,CAAC,GAAC,KAAKT,KAA9B,EAAoCU,CAAC,GAAC,KAAKT,MAA3C;AACA;;AAzD8B","sourcesContent":["export default class SpriteSheet{\r\n\tconstructor(image,width,height){\r\n\t\tthis.image=image;\r\n\t\tthis.width=width;\r\n\t\tthis.height=height;\r\n\t\tthis.tiles=new Map();\r\n\t\tthis.animation=new Map();\r\n\t}\r\n\r\n\tdefineAnim(name,animation){\r\n\t\tthis.animation.set(name,animation);\r\n\t}\r\n\r\n\tdefine(name,x,y,width,height){\r\n\t\tconst buffers = [false,true].map(flip=>{\r\n\t\tconst buffer=document.createElement('canvas');\r\n\t\tbuffer.width=width; //?\r\n\t\tbuffer.height=height; //?\r\n\r\n\t\tconst context =buffer.getContext('2d');\r\n\r\n\t\tif (flip){\r\n\t\tcontext.scale(-1,1);\r\n\t\tcontext.translate(-width,0);\r\n\t\t}\r\n\r\n\t\tcontext.drawImage(\r\n\t\t\t\tthis.image,\r\n\t\t\t\tx, //pieces\r\n\t\t\t\ty,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\t0, //coordinates\r\n\t\t\t\t0,\r\n\t\t\t\twidth, //size\r\n\t\t\t\theight);\r\n\t\t\treturn buffer;\r\n\t\t});\r\n\t\tthis.tiles.set(name,buffers);\r\n\t}\r\n\r\n\tdefineTile(name,x,y){\r\n\t\tthis.define(name,x*this.width,y*this.height,this.width,this.height);\r\n\t}\r\n\r\n\tdraw(name,context,x,y, flip=false){\r\n\t\tconst buffer=this.tiles.get(name)[flip?1:0];\r\n\t\tcontext.drawImage(buffer,x,y);\r\n\t}\r\n\r\n\tdrawAnim(name,context,x,y,distance){\r\n\t\tconst animation = this.animation.get(name);\r\n\t\tthis.drawtile(animation(distance),context,x,y);\r\n\t}\r\n\r\n\tdrawtile(name,context,x,y){\r\n\t\tthis.draw(name,context,x*this.width,y*this.height);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}