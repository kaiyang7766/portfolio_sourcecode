{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ang Kai Yang\\\\Desktop\\\\portfolio\\\\src\\\\main\\\\Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { loadLevel } from './loaders/level.js'; //import Entity from './Entity.js';\n\nimport { createMario } from './entities.js';\nimport Timer from './Timer.js'; //import Compositor from './Compositor.js';\n\nimport { setupKeyboard } from './input.js';\nimport Camera from './Camera.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Canvas = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    Promise.all([//createMario(),\n    //console.log('Createmario'),\n    loadLevel('1-1'), console.log('loadlevel')]).then(([level]) => {\n      console.log('then');\n      const camera = new Camera();\n      window.camera = camera; //mario.pos.set(50,90);\n      //level.entities.add(mario);\n      //const input=setupKeyboard(mario);\n      //input.listenTo(window);\n\n      const timer = new Timer(1 / 60);\n\n      timer.update = function update(deltaTime) {\n        level.comp.draw(context, camera);\n        level.update(deltaTime); // if (mario.pos.x>100){\n        //   camera.pos.x=mario.pos.x-100\n        // }\n      };\n\n      timer.start();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/main/Canvas.js"],"names":["React","useRef","useEffect","loadLevel","createMario","Timer","setupKeyboard","Camera","Canvas","props","canvasRef","canvas","current","context","getContext","Promise","all","console","log","then","level","camera","window","timer","update","deltaTime","comp","draw","start"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,oBAAxB,C,CACA;;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CACA;;AACA,SAAQC,aAAR,QAA4B,YAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAMC,SAAS,GAAGT,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CACV;AACA;AACAb,IAAAA,SAAS,CAAC,KAAD,CAHC,EAIVc,OAAO,CAACC,GAAR,CAAY,WAAZ,CAJU,CAAZ,EAMCC,IAND,CAMM,CAAC,CAACC,KAAD,CAAD,KAAW;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,YAAMG,MAAM,GAAG,IAAId,MAAJ,EAAf;AACAe,MAAAA,MAAM,CAACD,MAAP,GAAcA,MAAd,CAHe,CAKf;AAEA;AAGA;AACA;;AAEA,YAAME,KAAK,GAAE,IAAIlB,KAAJ,CAAU,IAAE,EAAZ,CAAb;;AAEAkB,MAAAA,KAAK,CAACC,MAAN,GAAc,SAASA,MAAT,CAAgBC,SAAhB,EAA0B;AACxCL,QAAAA,KAAK,CAACM,IAAN,CAAWC,IAAX,CAAgBd,OAAhB,EAAwBQ,MAAxB;AACAD,QAAAA,KAAK,CAACI,MAAN,CAAaC,SAAb,EAFwC,CAGxC;AACA;AACA;AACD,OANC;;AAOAF,MAAAA,KAAK,CAACK,KAAN;AACD,KA7BD;AA8BD,GAjCQ,EAiCP,EAjCO,CAAT;AAmCA,sBACE;AAAA,2BACA;AAAQ,MAAA,GAAG,EAAElB,SAAb;AAAA,SAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAKD,CA5CD;;GAAMD,M;;KAAAA,M;AA8CN,eAAeA,MAAf","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport {loadLevel} from './loaders/level.js';\r\n//import Entity from './Entity.js';\r\nimport {createMario} from './entities.js';\r\nimport Timer from './Timer.js';\r\n//import Compositor from './Compositor.js';\r\nimport {setupKeyboard} from './input.js';\r\nimport Camera from './Camera.js';\r\n\r\nconst Canvas = (props) => {\r\n  \r\n  const canvasRef = useRef(null)\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    Promise.all([\r\n      //createMario(),\r\n      //console.log('Createmario'),\r\n      loadLevel('1-1'),\r\n      console.log('loadlevel'),\r\n    ])\r\n    .then(([level])=>{\r\n      console.log('then');\r\n      const camera = new Camera();\r\n      window.camera=camera;\r\n   \r\n      //mario.pos.set(50,90);\r\n   \r\n      //level.entities.add(mario);\r\n\r\n   \r\n      //const input=setupKeyboard(mario);\r\n      //input.listenTo(window);\r\n   \r\n      const timer= new Timer(1/60);\r\n   \r\n      timer.update =function update(deltaTime){\r\n      level.comp.draw(context,camera);\r\n      level.update(deltaTime);\r\n      // if (mario.pos.x>100){\r\n      //   camera.pos.x=mario.pos.x-100\r\n      // }\r\n    }\r\n      timer.start();\r\n    });\r\n  },[])\r\n  \r\n  return(\r\n    <>\r\n    <canvas ref={canvasRef} {...props}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Canvas"]},"metadata":{},"sourceType":"module"}