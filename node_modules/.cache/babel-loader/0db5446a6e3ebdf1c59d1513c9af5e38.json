{"ast":null,"code":"export default class TileResolver {\n  constructor(matrix, tileSize = 16) {\n    this.matrix = matrix;\n    this.tileSize = tileSize;\n  }\n\n  toIndex(pos) {\n    return Math.floor(pos / this.tileSize);\n  }\n\n  toIndexRange(pos1, pos2) {\n    const pMax = Math.ceil(pos2 / this.tileSize) * this.tileSize;\n    const range = [];\n    let pos = pos1;\n\n    do {\n      range.push(this.toIndex(pos));\n      pos += this.tileSize;\n    } while (pos < pMax);\n\n    return range;\n  }\n\n  getByIndex(indexX, indexY) {\n    const tile = this.matrix.get(indexX, indexY);\n\n    if (tile) {\n      const x1 = indexX * this.tileSize;\n      const x2 = x1 + this.tileSize;\n      const y1 = indexY * this.tileSize;\n      const y2 = y1 + this.tileSize;\n      return {\n        tile,\n        x1,\n        x2,\n        y1,\n        y2\n      };\n    }\n  }\n\n  searchByPosition(posX, posY) {\n    return this.getByIndex(this.toIndex(posX), this.toIndex(posY));\n  }\n\n  searchByRange(x1, x2, y1, y2) {\n    const matches = [];\n    this.toIndexRange(x1, x2).forEach(indexX => {\n      this.toIndexRange(y1, y2).forEach(indexY => {\n        const match = this.getByIndex(indexX, indexY);\n\n        if (match) {\n          matches.push(match);\n        }\n      });\n    });\n    return matches;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/js/TileResolver.js"],"names":["TileResolver","constructor","matrix","tileSize","toIndex","pos","Math","floor","toIndexRange","pos1","pos2","pMax","ceil","range","push","getByIndex","indexX","indexY","tile","get","x1","x2","y1","y2","searchByPosition","posX","posY","searchByRange","matches","forEach","match"],"mappings":"AAAA,eAAe,MAAMA,YAAN,CAAkB;AAChCC,EAAAA,WAAW,CAACC,MAAD,EAAQC,QAAQ,GAAC,EAAjB,EAAoB;AAC9B,SAAKD,MAAL,GAAYA,MAAZ;AACA,SAAKC,QAAL,GAAcA,QAAd;AACA;;AAEDC,EAAAA,OAAO,CAACC,GAAD,EAAK;AACX,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,KAAKF,QAAtB,CAAP;AACA;;AAEDK,EAAAA,YAAY,CAACC,IAAD,EAAMC,IAAN,EAAW;AACtB,UAAMC,IAAI,GAACL,IAAI,CAACM,IAAL,CAAUF,IAAI,GAAC,KAAKP,QAApB,IAA8B,KAAKA,QAA9C;AACA,UAAMU,KAAK,GAAC,EAAZ;AACA,QAAIR,GAAG,GAAGI,IAAV;;AACA,OAAG;AACFI,MAAAA,KAAK,CAACC,IAAN,CAAW,KAAKV,OAAL,CAAaC,GAAb,CAAX;AACAA,MAAAA,GAAG,IAAE,KAAKF,QAAV;AACA,KAHD,QAGSE,GAAG,GAACM,IAHb;;AAIA,WAAOE,KAAP;AACA;;AAEDE,EAAAA,UAAU,CAACC,MAAD,EAAQC,MAAR,EAAe;AACxB,UAAMC,IAAI,GAAC,KAAKhB,MAAL,CAAYiB,GAAZ,CAAgBH,MAAhB,EAAuBC,MAAvB,CAAX;;AACA,QAAIC,IAAJ,EAAS;AACR,YAAME,EAAE,GAACJ,MAAM,GAAC,KAAKb,QAArB;AACA,YAAMkB,EAAE,GAACD,EAAE,GAAC,KAAKjB,QAAjB;AACA,YAAMmB,EAAE,GAACL,MAAM,GAAC,KAAKd,QAArB;AACA,YAAMoB,EAAE,GAACD,EAAE,GAAC,KAAKnB,QAAjB;AACA,aAAO;AACNe,QAAAA,IADM;AAENE,QAAAA,EAFM;AAGNC,QAAAA,EAHM;AAINC,QAAAA,EAJM;AAKNC,QAAAA;AALM,OAAP;AAOA;AACD;;AAEDC,EAAAA,gBAAgB,CAACC,IAAD,EAAMC,IAAN,EAAW;AAC1B,WAAO,KAAKX,UAAL,CACN,KAAKX,OAAL,CAAaqB,IAAb,CADM,EAEN,KAAKrB,OAAL,CAAasB,IAAb,CAFM,CAAP;AAGA;;AAEDC,EAAAA,aAAa,CAACP,EAAD,EAAIC,EAAJ,EAAOC,EAAP,EAAUC,EAAV,EAAa;AACzB,UAAMK,OAAO,GAAC,EAAd;AACA,SAAKpB,YAAL,CAAkBY,EAAlB,EAAqBC,EAArB,EAAyBQ,OAAzB,CAAiCb,MAAM,IAAE;AACxC,WAAKR,YAAL,CAAkBc,EAAlB,EAAqBC,EAArB,EAAyBM,OAAzB,CAAiCZ,MAAM,IAAE;AACxC,cAAMa,KAAK,GAAC,KAAKf,UAAL,CAAgBC,MAAhB,EAAuBC,MAAvB,CAAZ;;AACA,YAAIa,KAAJ,EAAU;AACTF,UAAAA,OAAO,CAACd,IAAR,CAAagB,KAAb;AACA;AACD,OALD;AAMA,KAPD;AAQA,WAAOF,OAAP;AACA;;AAvD+B","sourcesContent":["export default class TileResolver{\r\n\tconstructor(matrix,tileSize=16){\r\n\t\tthis.matrix=matrix;\r\n\t\tthis.tileSize=tileSize;\r\n\t}\r\n\r\n\ttoIndex(pos){\r\n\t\treturn Math.floor(pos / this.tileSize);\r\n\t}\r\n\r\n\ttoIndexRange(pos1,pos2){\r\n\t\tconst pMax=Math.ceil(pos2/this.tileSize)*this.tileSize;\r\n\t\tconst range=[];\r\n\t\tlet pos = pos1;\r\n\t\tdo {\r\n\t\t\trange.push(this.toIndex(pos));\r\n\t\t\tpos+=this.tileSize;\r\n\t\t} while (pos<pMax);\r\n\t\treturn range;\r\n\t}\r\n\r\n\tgetByIndex(indexX,indexY){\r\n\t\tconst tile=this.matrix.get(indexX,indexY);\r\n\t\tif (tile){\r\n\t\t\tconst x1=indexX*this.tileSize;\r\n\t\t\tconst x2=x1+this.tileSize;\r\n\t\t\tconst y1=indexY*this.tileSize;\r\n\t\t\tconst y2=y1+this.tileSize;\r\n\t\t\treturn {\r\n\t\t\t\ttile,\r\n\t\t\t\tx1,\r\n\t\t\t\tx2,\r\n\t\t\t\ty1,\r\n\t\t\t\ty2,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tsearchByPosition(posX,posY){\r\n\t\treturn this.getByIndex(\r\n\t\t\tthis.toIndex(posX),\r\n\t\t\tthis.toIndex(posY));\r\n\t}\r\n\r\n\tsearchByRange(x1,x2,y1,y2){\r\n\t\tconst matches=[];\r\n\t\tthis.toIndexRange(x1,x2).forEach(indexX=>{\r\n\t\t\tthis.toIndexRange(y1,y2).forEach(indexY=>{\r\n\t\t\t\tconst match=this.getByIndex(indexX,indexY);\r\n\t\t\t\tif (match){\r\n\t\t\t\t\tmatches.push(match);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn matches;\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}