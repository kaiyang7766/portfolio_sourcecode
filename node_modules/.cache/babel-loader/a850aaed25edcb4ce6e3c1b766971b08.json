{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ang Kai Yang\\\\Desktop\\\\portfolio\\\\src\\\\Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Canvas = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d'); //Our first draw\n\n    context.fillStyle = '#000000';\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n    console.log(context.canvas.width);\n    console.log(canvasRef);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["C:/Users/Ang Kai Yang/Desktop/portfolio/src/Canvas.js"],"names":["React","useRef","useEffect","Canvas","props","canvasRef","canvas","current","context","getContext","fillStyle","fillRect","width","height","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB,CAFc,CAGd;;AACAD,IAAAA,OAAO,CAACE,SAAR,GAAoB,SAApB;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBH,OAAO,CAACF,MAAR,CAAeM,KAAtC,EAA6CJ,OAAO,CAACF,MAAR,CAAeO,MAA5D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACF,MAAR,CAAeM,KAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACD,GARQ,EAQN,EARM,CAAT;AAUA,sBAAO;AAAQ,IAAA,GAAG,EAAEA,SAAb;AAAA,OAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfD;;GAAMD,M;;KAAAA,M;AAiBN,eAAeA,MAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nconst Canvas = (props) => {\r\n  \r\n  const canvasRef = useRef(null)\r\n  \r\n  useEffect(() => {\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n    //Our first draw\r\n    context.fillStyle = '#000000'\r\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height)\r\n    console.log(context.canvas.width)\r\n    console.log(canvasRef)\r\n  }, [])\r\n  \r\n  return <canvas ref={canvasRef} {...props}/>\r\n}\r\n\r\nexport default Canvas\r\n"]},"metadata":{},"sourceType":"module"}